Now that we've explored how accounts are generated, understood the workings of transactions, and learned about the construction of blocks that store these transactions, you might wonder: how do we connect to this network and submit our transactions?
Enter the world of Bitcoin wallets. Think of wallets as user-friendly applications that bridge the gap between you and the Bitcoin network. A wallet manages your private keys, as we saw, is the critical component for securing and executing transactions. With your private key, the wallet can generate addresses to receive bitcoins, track the values in these addresses, manage your overall balance, and handle the creation, signing, and submission of new transactions to the network.
Here are two intriguing facts about Bitcoin wallets:
Their main function is to store and manage your private keys.
Contrary to what the name suggests, wallets don't store bitcoins (as we have already seen, the coins are stored on the blockchain in the form of transaction outputs);
This raises an interesting point about terminology. Is 'wallet' really the best name for this type of application? Given their functions, these tools resemble a 'keychain' more closely. They securely store your private keys, which, in turn, grant you access to your funds and enable you to transfer values to others.
Whenever we mention a 'wallet' in the context of Bitcoin, feel free to visualize a 'keychain' if that makes more sense to you. It's all about securely holding the keys to your digital treasure.
While there are various types of wallets out there, we're going to zoom in on HD (hierarchical deterministic) wallets in this discussion.
With just one piece of information, which is your private key, an HD wallet can generate addresses to receive bitcoins, manage the balances of these addresses, and also sign transactions to send bitcoins.
"Deterministic" in this context means that the wallet spits out keys and addresses in the same way every time you ask it to. No surprises there! And 'hierarchical'? That's just a fancy way of saying that these keys and addresses can be neatly organized into a tree-like structure.
The real kicker with an HD wallet is this: you get one seed to rule them all. From this single seed, you can conjure up a master private key. And from this master key? You can generate billions of 'child' private keys and public keys.
Remember how we talked about private and public keys before? Well, here's how it all comes together in an HD wallet:
You start with your seed. This seed is used to create your master private key. Once you've got that, you're set to generate a seemingly endless stream of 'child' private keys and public keys. The cool part? All you need to back up is your seed. Because the master private key, derived from this seed, will always churn out your wallet's keys in the same, predictable manner (that's the deterministic part!).
In short, an HD wallet keeps things simple and secure. All you need is a seed. And if you ever need to delete that wallet and install a new one to use, with the seed, that new wallet will be able to generate all the same keys and addresses that the old one did.
But what exactly is this seed?
A seed in the Bitcoin universe is a gigantic 256-bit number. This means you can choose any number that fits within these 256 bits.
But how big is a 256-bit number? We saw in the Hash chapter that a 256-bit number is roughly on the same scale as the number of atoms in the universe.
Pick any atom in the universe! Okay, that's now your seed!

And what are the chances of someone choosing the same atom?
None, right?
So here we have a problem: We humans!
We humans are not very good at dealing with randomness.
A study conducted by Schulz et al. in 2012 called "Analyzing Humanly Generated Random Number Sequences: A Pattern-Based Approach", focused on analyzing humanly generated random number sequences. The researchers aimed to understand how humans generate what they perceive to be random sequences and to identify the underlying patterns in these sequences.
In the experiment, participants were asked to produce sequences of random numbers, typically digits from 1 to 9. These human-generated sequences were then scrutinized using a pattern-based analysis, contrasting them with truly random sequences generated by a computer. The key methodology involved predicting the next item in a sequence based on its immediate history, using a model built on the Damerau-Levenshtein distance, a metric that calculates the number of edits needed to transform one string into another.
The results were revealing: when predicting the next number based on a history of seven items, the success rate for correctly guessing the next number rose significantly above chance levels. This high prediction rate indicated that the sequences were not truly random but followed certain identifiable patterns.
Furthermore, the study also attempted to distinguish sequences generated by different individuals. It was found that an algorithm could often correctly identify sequences generated by a particular person, suggesting person-specific patterns within the humanly generated sequences.
The conclusion drawn from this experiment was quite significant: while humans believe they can generate random sequences, their outputs often follow discernible patterns and are not truly random. This study sheds light on the cognitive processes involved in human attempts at randomness and demonstrates a clear distinction between human-generated and computer-generated randomness. It highlights the inherent biases and tendencies in human thought processes, even when randomness is the goal.
Alright, so what are your options for creating a seed? Well, you can go random. First up, we need to generate some entropy. Put simply, entropy is just a fancy word for randomness. There are a bunch of ways to do this, but one popular method is the good old coin flip.

Imagine flipping a coin 256 times. Each flip gives you a binary choice, right? Heads or tails, 0 or 1. So, after 256 flips, you have a sequence of 256 bits, which is a mixture of 0s and 1s.
If you convert this 256-bit binary sequence to a decimal number, you'll get a cardinal number that will represent one of the atoms in the Universe.
But let's face it, not everyone is willing to flip a coin that many times. That's why most wallets make our lives easier, allowing the generation of a seed with just 128 or 256 bits. Fewer flips, less work.
The easiest way to get this done? Grab a coin and flip it 128 times. Heads, you jot down a 0; tails, it's a 1. There you go â€“ a random sequence of 128 bits, also known as your entropy. Want more security? Do it 256 times. Longer entropy equals a more secure seed.
Another route? Let your wallet software generate the seed for you.
Now, back to our 128-bit sequence. There's an extra step here: adding a checksum. Think of the checksum like a fingerprint. It's tacked on to the end of your sequence to make sure you didn't goof up while copying it down. The wallet takes care of this, generating a 4-bit fingerprint of your entropy.
This fingerprint gets added to your 128-bit, giving you a 132-bit sequence. 
Let's face it: trying to memorize or jot down a string of 132 bits, which are just 0s and 1s, is no walk in the park. That's why a much simpler method was developed: turning these bit sequences into a series of English words, also known as mnemonic code words.
This approach has become pretty standard in the world of Bitcoin wallets. It's all about making seeds easier to write, remember, transfer, and restore. With this method, most Bitcoin wallets today can export and import seeds for backup and recovery using these handy mnemonics.
What's cool is that a user can take a mnemonic generated in one wallet and then import it into another. Just like that, you've got all your transactions, keys, and addresses back.
Now you might be wondering, how do we turn that humongous string of 0s and 1s into something as simple as words? Well, let's dive in!
We start by taking our 132-bit sequence and splitting it into 11-bit chunks. Since our sequence is 132 bits long, dividing by 11 gives us 12 chunks. If you're working with a 256-bit sequence, you'll end up with 24 chunks.

For example, let's say we have a sequence that breaks down into these chunks:
10101001101
00011010101
11000011101
01000100010
11011110000
00110010001
01001011100
01111110100
01001110111
10101000000
01001111100
10001110000
As you can notice, each chunk is a binary number. The lowest value of the chunk can be 00000000000 which is 0 in decimal. Whereas, the maximum value can be 11111111111 which is 2047 in decimal.
Each chunk is valued between 0-2047. Mnemonic defined 2048 words, each word representing one number from 0 to 2047.
Word 0 is: abandon
Word 1 is: ability
Word 2047 is: zoo
You can see the full list of words here: https://github.com/bitcoin/bips/blob/master/bip-0039/english.txt#L1 
In our example, from the table, you can see that the decimal values of our chunks are: 1357, 213, 1565, 546, 1776, 401, 604, 1012, 631, 1344, 636, and 1136.
Picking the words from the list,  we got the following mnemonic code: predict, boy, senior, dust, task, cram, entire, leader, exclude, pool, exhibit, mix.
Now, the mnemonic words are used to generate the master private key. This master private key is the root from which a tree of private keys can be derived. Each branch of this tree corresponds to a specific private key.
These private keys, in turn, are used to generate their corresponding public keys. The public keys undergo a cryptographic transformation to produce wallet addresses. These addresses are what users share publicly to receive cryptocurrency transactions.
The beauty of an HD wallet lies in its ability to generate a multitude of private and public keys, and consequently, addresses, all stemming from the original mnemonic seed. This structure not only enhances security but also improves the organization and management of your bitcoins, as each branch can represent different accounts or purposes.
Alright, so we've got our HD wallet all set up with our mnemonic words and seed. Now, what can this tool do for us in the Bitcoin world? Let's break down some of its super handy functions:
Generating an Address to Receive Bitcoins: First things first, you want to get some bitcoins, right? Your wallet's got you covered. Once it's loaded with your seed, it does some digital gymnastics to generate a private key. From this private key, it figures out your public key. And voilÃ , it then whips up your very own Bitcoin address. This is like your unique digital mailbox where people can send you bitcoins. Just share this address, and watch your digital treasure grow.
Checking Your Account Balance: Want to keep an eye on your Bitcoin stash? Your wallet can either be a know-it-all that stores the entire Bitcoin blockchain (that's a full node wallet) or a lightweight wallet that connects to another full node to get the scoop (that's your more common lightweight wallet, perfect for everyday devices like cellphones). Either way, it's always on top of your balance, letting you know how much Bitcoin you've got at any given moment.
Submitting a Transfer: Consider, that you want to send some bitcoins to a friend or maybe pay for something. Your wallet checks how much Bitcoin you have, and decides which inputs to send, and where to send them (outputs). Then it gets down to business, putting together the whole transaction structure. The wallet even signs off on this digital deal with your private key, a cryptographic signature. Once that's all done, it sends the transaction over to the neighbor nodes in the Bitcoin network, making sure your transaction gets around and is propagated through the network until it reaches some mining node.
Remember:
Bitcoin doesn't have accounts like a traditional bank does.
Bitcoin doesn't have a customer support hotline you can call when things go sideways.
There's no big boss or central authority in charge of the Bitcoin world.
What does all this mean for you? You're the one responsible for generating and keeping track of your seeds. Think of it like being handed the keys to a super secure, high-tech vault. Those seeds are your keys, and there's no duplicate. If you lose them, well, there's no locksmith in the Bitcoin world to help you out.
Your seed is the master key to all your Bitcoin transactions and balances. Lose it, and it's like losing a treasure map where 'X' marks the spot of your digital gold. No one can recover it for you, and there's no 'forgot my password' option. That might sound a bit daunting, but it's also empowering. It means you have complete control over your digital assets.
Treat your seed with the same care as you would a wad of cash or your most precious possessions. Write it down, keep it safe, and maybe even have a backup in another secure location. In the world of Bitcoin, being your bank means taking the security of your seeds seriously. 
https://learnmeabitcoin.com/technical/keys/hd-wallets/ 
Andreas M. Antonopoulos - Mastering Bitcoin
Kalle Rosenbaum - Grokking Bitcoin
